name: build

on:
  push:
    branches:
      - main
      - 'renovate/**'

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  GIT_EMAIL: bot+ruby-semver@renovateapp.com
  NODE_VERSION: 18 # needs to be in sync with other v18 below
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  DRY_RUN: true

jobs:
  test:
    name: ${{ matrix.node-version == 18 && format('test ({0})', matrix.os) || format('test ({0}, node-{1})', matrix.os, matrix.node-version) }}
    runs-on: ${{ matrix.os }}

    # tests shouldn't need more time
    timeout-minutes: 30

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20]

    env:
      coverage: ${{ matrix.os == 'ubuntu-latest' && matrix.node-version == 18 }}
      NODE_VERSION: ${{ matrix.node-version }}

    permissions:
      actions: write
      contents: read

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 2

      - name: Enable corepack
        run: corepack enable

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Init platform
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email ${GIT_EMAIL}
          git config --global user.name  'Renovate Bot'
          echo "Node $(node --version)"
          echo "pnpm $(pnpm --version)"

      - name: Installing dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Unit tests
        run: pnpm jest --maxWorkers=2 --ci --coverage ${{ env.coverage }} --logHeapUsage

      - name: Upload coverage
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        if: always() && env.coverage == 'true'
        with:
          name: coverage
          path: coverage

      - name: Codecov
        uses: codecov/codecov-action@4fe8c5f003fae66aa5ebb77cfd3e7bfbbda0b6b0 # v3.1.5
        if: env.coverage == 'true'

  lint:
    runs-on: ubuntu-latest

    # lint shouldn't need more than 10 min
    timeout-minutes: 15

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 2

      - name: Enable corepack
        run: corepack enable

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email ${GIT_EMAIL}
          git config --global user.name  'Renovate Bot'
          echo "Node $(node --version)"
          echo "pnpm $(pnpm --version)"

      - name: Installing dependencies
        run: pnpm install

      - name: Lint
        run: |
          pnpm eslint -f gha
          pnpm markdown-lint
          pnpm prettier

      - name: Type check
        run: pnpm type-check

  release:
    needs: [lint, test]
    runs-on: ubuntu-latest
    # release shouldn't need more than 5 min
    timeout-minutes: 15

    permissions:
      contents: write
      id-token: write

    steps:
      # full checkout for semantic-release
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Enable corepack
        run: corepack enable

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email ${GIT_EMAIL}
          git config --global user.name  'Renovate Bot'

      - name: Check dry run
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" && "${{ github.event.inputs.dryRun }}" != "true"  ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          elif [[ "${{github.ref}}" == "refs/heads/${{env.DEFAULT_BRANCH}}" ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          elif [[ "${{github.ref}}" =~ ^refs/heads/v[0-9]+(\.[0-9]+)?$ ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          fi

      - name: Installing dependencies
        run: pnpm install

      - name: semantic-release
        run: pnpm semantic-release --dry-run ${{github.ref != 'refs/heads/main'}} --ci ${{github.ref == 'refs/heads/main'}}
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
