name: build

on:
  push:
    branches:
      - main
      - 'renovate/**'

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

env:
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  DRY_RUN: true

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          show-progress: false

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          save-cache: true
  test:
    needs:
      - setup
    name: ${{ matrix.node-version == 22 && format('test ({0})', matrix.os) || format('test ({0}, node-{1})', matrix.os, matrix.node-version) }}
    runs-on: ${{ matrix.os }}

    # tests shouldn't need more time
    timeout-minutes: 30

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version:
          - 20
          - 22
          - 24

    env:
      coverage: ${{ matrix.os == 'ubuntu-latest' && matrix.node-version == 22 }}

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 10 # required for coverage
          show-progress: false
          filter: blob:none # we don't need all blobs

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}
          save-cache: true

      - name: Init platform
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          echo "Node $(node --version)"
          echo "pnpm $(pnpm --version)"

      - name: Build
        run: pnpm build

      - name: Unit tests
        run: pnpm jest --maxWorkers=2 --ci --coverage ${{ env.coverage }} --logHeapUsage

      - name: Upload coverage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always() && env.coverage == 'true'
        with:
          name: coverage
          path: coverage

      - name: Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: env.coverage == 'true'

  lint:
    needs:
      - setup
    runs-on: ubuntu-latest

    # lint shouldn't need more than 10 min
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          show-progress: false

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          echo "Node $(node --version)"
          echo "pnpm $(pnpm --version)"

      - name: Lint
        run: |
          pnpm eslint -f gha
          pnpm markdown-lint
          pnpm prettier

      - name: Type check
        run: pnpm type-check

  release:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    # release shouldn't need more than 5 min
    timeout-minutes: 15

    permissions:
      contents: write
      issues: write
      id-token: write

    steps:
      # full checkout for semantic-release
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
          show-progress: false
          filter: blob:none # we don't need all blobs

      - name: 游닌 Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Check dry run
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" && "${{ github.event.inputs.dryRun }}" != "true"  ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          elif [[ "${{github.ref}}" == "refs/heads/${{env.DEFAULT_BRANCH}}" ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          elif [[ "${{github.ref}}" =~ ^refs/heads/v[0-9]+(\.[0-9]+)?$ ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          fi

      - name: semantic-release
        run: pnpm semantic-release --dry-run ${{github.ref != 'refs/heads/main'}} --ci ${{github.ref == 'refs/heads/main'}}
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Catch-all required check
  success:
    needs:
      - setup
      - lint
      - test
      - release
    runs-on: ubuntu-22.04

    timeout-minutes: 1

    if: always()
    steps:
      - name: Fail for failed or skipped setup job
        if: |
          needs.setup.result == 'failure' ||
          needs.setup.result == 'skipped'
        run: exit 1

      - name: Fail for failed or skipped lint job
        if: |
          needs.lint.result == 'failure' ||
          needs.lint.result == 'skipped'
        run: exit 1

      - name: Fail for failed or skipped lint job
        if: |
          needs.test.result == 'failure' ||
          needs.test.result == 'skipped'
        run: exit 1

      - name: Fail for failed or skipped release job
        if: |
          needs.release.result == 'failure' ||
          needs.release.result == 'skipped'
        run: exit 1
